<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE chapter [
<!ENTITY % entities SYSTEM "../common/entities.ent">
%entities;
]>

<chapter xml:id="doc-2acc09d6-e39f-48fb-9a92-2f2aa13c62f5"
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude" 
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    
    <title>Providing Application Authorization Credentials to &PRODUCTABBR;</title>
    
    <para> Your application should provide its authorization credentials to &PRODUCTABBR; each time
        a user uses it. To do this, be sure the application can handle the following additional
        steps: </para>
    <procedure>
        <step>
            <para>The main workflow of OAuth uses a web browser. Instantiate a web browser on the same device and make a RESTful call to
                    <uri>/oauth/authorize</uri>, passing your <varname>client_id</varname> as a query parameter. Example (the actual URL and <varname>client_id</varname>
                will be different): </para>
            <programlisting><![CDATA[
https://api.inBloom.example.org/api/oauth/authorize?client_id=EGbI4LaLaL
]]></programlisting>
        </step>
        <step>
            <para> Determine your OAuth authorization code to use for subsequent requests to
                &PRODUCTABBR;. Look for the <guilabel>authorization_code</guilabel> value within the
                JSON-formatted information displayed in the web browser. Example (code string
                omitted): </para>
            <programlisting><![CDATA[
{"authorization_code":"<code>"}
]]></programlisting>
            <caution>
                <title>Important!</title>
                <para> A user could hit multiple pages before this page is
                    returned. As a result, your application might have to check multiple pages to
                    find the OAuth authorization code. We recommend checking each page before it is
                    displayed to the user so that you can allow the internal web view to display the
                    login page for the user, but not display the authorization code response page
                    from &PRODUCTABBR;. </para>
            </caution>
        </step>
        <step>
            <para> Use the verification code to obtain an OAuth access token. To do this, make a
                RESTful call to <emphasis>/oauth/token</emphasis> passing in your client ID, Client
                Secret, a value for redirect_uri and the authorization code you retreived from the
                previous steps. You will receive an access token in the JSON response. Example URL
                (Your values should be different): <programlisting><![CDATA[
https://api.sandbox.inbloom.org/api/oauth/token?client_id=<client_id>&client_secret=<client_secret>&redirect_uri=nonce&code=<authorization code>
]]></programlisting>
            </para>    
            <para>Example Response (token omitted):
                <programlisting><![CDATA[
{"access_token":"<token>"}
]]></programlisting>
            </para>
        </step>
        <step>
            <para> From this point,ensure that your application uses the OAuth access token for each subsequent
                request to &PRODUCTABBR;. To make RESTful calls to the &PRODUCTABBR; REST API, using
                whichever JSON and HTTP libraries you are comfortable with, add an
                    <guilabel>Authorization</guilabel> header with your token to your HTTP request.
                Example (token omitted): </para>
            <programlisting><![CDATA[
Authorization: "Bearer <token>"
]]></programlisting>
        </step>
    </procedure>
</chapter>

        
