Environment Setup for building ESDS User-facing Documentation

The environment needed to build user-facing documentation 
for ESDS requires the following, with details provided 
in the sections that follow:

(1) A local Git client and access to the datastore_docs repository (where
    this file is located).
(2) A local install installation of DocBook XSL 1.78.1 
    with namespace support (ns).
(3) Additional environment setup using one of the following options:
    OPTION 1: An oXygen Editor environment, created by downloading and 
    installing oXygen Editor 14.0 or later (a licensed product).
    OPTION 2: [RECOMMENDED, even if editing in oXygen] A command line 
    environment with DocBook XSL, xsltproc, Saxon-HE 9.4, and Apache FOP 
    installed. Additional details about setting up this environment are 
    covered in the next section.
    
Set Up the Git Checkout
------------------------
Documentation is version controlled in the datastore_docs repository for 
the ESDS project. Install git and check out the repository as covered 
in the "Install git" portion of Development Environment Configuration 
for engineers. Writers also recommend using a UI tool like SourceTree 
to simplify Git interactions. 

Set Up DocBook XSL
-------------------
Download the archive for DocBook XSL 1.78.1 with namespace support (ns) 
from SourceForge: 
http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/1.78.1/
Then, unpack the archive and save it to a directly/folder on your local 
filesystem where you commonly install and use applications 
(such as /Applications on a Mac). Note the absolute path to this directory; 
if you build in the oXygen Editor, you will need to update a file in your 
repository checkout with its value.

(Option 1) Set Up oXygen Editor and Update the XML Entities File
-----------------------------------------------------------------
There is a free download and trial for oXygen Editor. However, when 
the trial expires, you will need a license to run transformations or 
save any files you edit in the editor. Download and setup are covered 
at the oXygen XML site.

If you want to build documentation from oXygen rather than a command 
line, one additional step is required: updating the XML entities file. 
The common entities file used in building ESDS documentation is 
techdoc/common/entities.ent in your datastore_docs checkout. There, 
update the value of LOCALDOCBOOKXSL to match the absolute path to 
your DocBook XSL directory on your local filesystem (which you set 
up in Set Up DocBookXSL).

NOTE: If you choose to build at a command prompt, you do no need to 
update the entities file. That change is performed as part of the 
script, instead. However, you will need everything installed and 
configured on your local system as listed in the next section for
setting up to build at the command line.

(Option 2) Set Up the Command Line
-----------------------------------
This command line environment setup should work at any Linux or UNIX 
command line, including Mac OS X. A Windows command line experience 
will be significantly different; readers are encouraged to supplement 
this file if they discover a Windows environment setup that will work.

Here's how to set up your command line environment in Linux or Mac for 
building the user-facing documentation for ESDS:

(1) Select a common application directory for all the applications 
    used in this environment. In a Mac, for example, you can select 
    the native /Applications/ directory where all applications are 
    typically installed, or you can create a separate directory of 
    your own. The remaining steps will refer to the absolute path 
    to this directory as "$APPDIR".
(2) Java - Install Java 1.5 or higher to support both Saxon and Apache FOP. 
    See Java documentation corresponding to your operating system for 
    more information about installing Java.
(3) PATH environment variable - Append the PATH environment variable 
    so that it includes the path to the Java home directory.
(4) APPDIR environment variable - Set an environment variable "APPDIR" 
    to the value of the directory you selected in the previous step.
(5) bash shell - At a command prompt, confirm that you have the bash 
    shell installed on your system: run "which bash" to confirm, which 
    should return a file path like /bin/bash.
(6) DocBook XSL with Namespace Support (NS) - 
    http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/1.78.1/
    When you download and unpack DocBook XSL 1.78.1 with namespace support 
    (ns) as described in Set Up DocBook XSL above, place it in the same 
    $APPDIR. You can move the directory to $APPDIR if it isn't there already.
    This directory contains a hierarchy of XSL and supporting files with 
    no binaries and no need to build binaries. 
(7) Saxon - 
    http://sourceforge.net/projects/saxon/files/Saxon-HE/9.4/
    Download and unpack the binary Saxon-HE 9.4 (not the "source" files), 
    and copy the saxon9he.jar file into $APPDIR. This Java application is 
    an XSLT processor used to transform the auto-generated files for the 
    API docs into the DocBook XML files used to generate the developer docs.
    The "HE" or "home edition" is free; other editions require a paid 
    license for use.
(8) xsltproc - 
    Check whether xsltproc is already installed on your operating system. 
    Since this is part of libxml, commonly included in Linux and Mac, 
    it should also be in your command path: run "which xsltproc" at a 
    command prompt, which should return a file path like /usr/bin/xsltproc. 
    If xsltproc is not installed, see the following page for information 
    about installing it, and add it to your command path once it's installed: 
    http://www.sagehill.net/docbookxsl/InstallingAProcessor.html
    This application is an XSLT processor used to transform DocBook XML 
    into HTML or FO files.
(9) Apache FOP 1.0 -
    http://xmlgraphics.apache.org/fop/download.html
    Download and unpack the binary Apache FOP 1.0 (not the "source" files) 
    into $APPDIR. This Java application processes formatting object (FO) 
    files into other forms of output, such as the PDF files used for 
    ESDS documentation.
(10) OFFO Hyphenation Library - 
     http://offo.sourceforge.net/hyphenation/
     Download and unpack the binary OFFO Hyphenation Library (not the 
     "source" files), which is packaged separately from Apache FOP due to 
     license conflicts. Instructions here indicate where to copy the 
     fop-hyph.jar into the Apache FOP application directory:
     http://offo.sourceforge.net/hyphenation/binary/installation.html

----------------------------------------------------------------------
NOTE: Why two XSLT processors?
After research and experiments, the original documentation team 
determined that the XSL 2.0, and XPath code used to transform the 
modified WADL file required Saxon 9.4. Earlier versions of Saxon, 
and both the Xalan and xsltproc processors, could not handle these 
newer standards required for the advanced processing of that file. 
Likewise, Saxon 9.4 encountered node set errors when handling the 
DocBook XML that were unreasonably difficult to resolve for the 
sole purpose of consolidating processors. As a result, the team 
decided to use two different processors instead of one, selecting 
the simplest of those needed for the DocBook XML transforms.
To ensure consistency when building in the oXygen Editor, the 
transformation scenarios in oXygen use the same processors as those
at the command line.
----------------------------------------------------------------------

